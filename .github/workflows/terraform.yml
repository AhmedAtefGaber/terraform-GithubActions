name: deploy Lambda-function using Terraform
#trigger this Action when Push.
#meaning if any file in this entire repo is updated in the master branch, this action will run.
on: [push]

jobs:
  terraform-lambda:
    name: 'Terraform'
    #set a runs-on. Weâ€™re using Ubuntu latest.
    runs-on: ubuntu-latest
    env:
      #define the environmet variables of AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
      #they will be retrieved from github environment secrets which we have added before.
      #they are excluded from Action logs and unreadable in the GUI.
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    steps:
      - name: Checkout
        #check out the code from our local repo where the GitHub Action host lives. 
        uses: actions/checkout@v2

      - name: Setup Terraform
        #retrieves the Terraform CLI used in the GitHub action workflow. 
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        #checks whether the configuration has been properly formatted.
        #If the configuration isn't properly formatted this step will produce an error. 
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        #initializes the configuration used in the GitHub action workflow.
        id: init
        run: terraform init

      - name: Terraform Validate
        #validates the configuration used in the GitHub action workflow 
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        #generates a Terraform plan. 
        #This step will continue even when it errors.
        #This allows the next step to display the plan error message even if this step fails.
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        #returns whether a plan was successfully generated or not. 
        #This step runs whenever a plan fails because the "Terraform Plan" step continues on error.
        if: steps.plan.outcome == 'failure'
        run: exit 1
    
      - name: Terraform Apply
        #applies the configuration.
        run: terraform apply -auto-approve
